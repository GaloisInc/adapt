{
    "netflow_connect_process_exec" : {
        "description" : "Analyze netflow nodes that have connection with file execution (potential remote execution command)",
        "instance_set" : "IDS=g.V().has(ETYPE,CONNECT).both(E_A_N_O,N_A_E_I).both(E_A_N_I,N_A_E_O).as('netflow').both(N_A_E_O,E_A_N_I).both(N_A_E_I,E_A_N_O).out(E_G_B_S_O).out(E_G_B_S_I).in(E_G_B_S_I).in(E_G_B_S_O).has(ETYPE,EXECUTE).select('netflow').dedup().id().toList()",
        "feature_set" : {
            "write_bytes":
                "g.V(IDS).local(__.both(N_A_E_O,E_A_N_I).both(N_A_E_I,E_A_N_O).has(ETYPE,WRITE).values(SIZE).sum())",
            "read_bytes":
                "g.V(IDS).local(__.both(N_A_E_O,E_A_N_I).both(N_A_E_I,E_A_N_O).has(ETYPE,READ).values(SIZE).sum())",
            "num_writes":
                "g.V(IDS).local(__.both(N_A_E_O,E_A_N_I).both(N_A_E_I,E_A_N_O).has(ETYPE,WRITE).count())",
            "num_reads":
                "g.V(IDS).local(__.both(N_A_E_O,E_A_N_I).both(N_A_E_I,E_A_N_O).has(ETYPE,READ).count())"
        }
    },

    "netflow_accept_process_exec" : {
        "description" : "Analyze netflow nodes that have connection with file execution (potential remote execution command)",
        "instance_set" : "IDS=g.V().has(ETYPE,ACCEPT).both(E_A_N_O,N_A_E_I).both(E_A_N_I,N_A_E_O).as('netflow').both(N_A_E_O,E_A_N_I).both(N_A_E_I,E_A_N_O).out(E_G_B_S_O).out(E_G_B_S_I).in(E_G_B_S_I).in(E_G_B_S_O).has(ETYPE,EXECUTE).select('netflow').dedup().id().toList()",
        "feature_set" : {
            "write_bytes":
                "g.V(IDS).local(__.both(N_A_E_O,E_A_N_I).both(N_A_E_I,E_A_N_O).has(ETYPE,WRITE).values(SIZE).sum())",
            "read_bytes":
                "g.V(IDS).local(__.both(N_A_E_O,E_A_N_I).both(N_A_E_I,E_A_N_O).has(ETYPE,READ).values(SIZE).sum())",
            "num_writes":
                "g.V(IDS).local(__.both(N_A_E_O,E_A_N_I).both(N_A_E_I,E_A_N_O).has(ETYPE,WRITE).count())",
            "num_reads":
                "g.V(IDS).local(__.both(N_A_E_O,E_A_N_I).both(N_A_E_I,E_A_N_O).has(ETYPE,READ).count())"
        }
    },

    "netflow_connect_last_activity_gap" : {
        "description" : "Identify netflow nodes that are open for long time",
        "instance_set": "IDS=g.V().has(ETYPE,CONNECT).both(E_A_N_O,N_A_E_I).both(E_A_N_I,N_A_E_O).dedup().id().toList()",
        "feature_set": {
            "connect_last_activity_gap":{
                "first":
                    "g.V(IDS).local(__.both(N_A_E_O,E_A_N_I).both(N_A_E_I,E_A_N_O).has(STYPE,EVENT).values(STIME).max())",
                "second":
                    "g.V(IDS).local(__.both(N_A_E_O,E_A_N_I).both(N_A_E_I,E_A_N_O).has(ETYPE,CONNECT).values(STIME).min())",
                "operator":
                    "RELUTime"
            }
        }
    },

    "netflow_accept_last_activity_gap" : {
        "description" : "Identify netflow nodes that are open for long time",
        "instance_set": "IDS=g.V().has(ETYPE,ACCEPT).both(E_A_N_O,N_A_E_I).both(E_A_N_I,N_A_E_O).dedup().id().toList()",
        "feature_set": {
            "accept_last_activity_gap":{
                "first":
                    "g.V(IDS).local(__.both(N_A_E_O,E_A_N_I).both(N_A_E_I,E_A_N_O).has(STYPE,EVENT).values(STIME).max())",
                "second":
                    "g.V(IDS).local(__.both(N_A_E_O,E_A_N_I).both(N_A_E_I,E_A_N_O).has(ETYPE,ACCEPT).values(STIME).min())",
                "operator":
                    "RELUTime"
            }
        }
    },



    "process_connected_with_netflow" : {
        "description" : "Analyze process nodes that have network activity",
        "instance_set" : "IDS=g.V().has(STYPE,PROCESS).where(__.in(E_G_B_S_I).in(E_G_B_S_O).both(E_A_N_O,N_A_E_I)).id().toList()",
        "feature_set" : {
            "num_distinct_dst_port_access":
                "g.V(IDS).local(__.in(E_G_B_S_I).in(E_G_B_S_O).both(E_A_N_O,N_A_E_I).both(E_A_N_I,N_A_E_O).values(DPORT).dedup().count())",
            "num_distinct_src_port_access":
                "g.V(IDS).local(__.in(E_G_B_S_I).in(E_G_B_S_O).both(E_A_N_O,N_A_E_I).both(E_A_N_I,N_A_E_O).values(SPORT).dedup().count())",
            "total_bytes_sent_to_netflow":
                "g.V(IDS).local(__.in(E_G_B_S_I).in(E_G_B_S_O).has(ETYPE,WRITE).as('event').both(E_A_N_O,N_A_E_I).select('event').has(SIZE).values(SIZE).sum())",
            "total_bytes_rcv_from_netflow":
                "g.V(IDS).local(__.in(E_G_B_S_I).in(E_G_B_S_O).has(ETYPE,READ).as('event').both(E_A_N_O,N_A_E_I).select('event').has(SIZE).values(SIZE).sum())",
            "num_writes_to_net_flow":
                "g.V(IDS).local(__.in(E_G_B_S_I).in(E_G_B_S_O).has(ETYPE,WRITE).both(E_A_N_O,N_A_E_I).count())",
            "num_reads_to_netflow":
                "g.V(IDS).local(__.in(E_G_B_S_I).in(E_G_B_S_O).has(ETYPE,READ).both(E_A_N_O,N_A_E_I).count())"
        }
    },

    "process_connect_many_ip_same_network" : {
        "description": "Analyze process nodes that have many ip access within same network",
        "instance_set": "IDS=g.V().has(STYPE,PROCESS).where(__.in(E_G_B_S_I).in(E_G_B_S_O).both(E_A_N_O,N_A_E_I)).id().toList()",
        "feature_set": {
            "max_num_local_net_access":
                "g.V(IDS).local(__.in(E_G_B_S_I).in(E_G_B_S_O).both(E_A_N_O,N_A_E_I).both(E_A_N_I,N_A_E_O).dedup().groupCount().by{x=it.value(DADDRESS);if(x.indexOf('.') >=0 ){x.substring(0,x.indexOf('.',x.indexOf('.',0)+1))} else {x.substring(0,x.indexOf(':',x.indexOf(':',0)+1))}}.mapValues().max())"
        }
    },

    "process_connect_many_or_rare_ip" : {
        "description": "Analyze process nodes that have rare ip access",
        "instance_set": "IDS=g.V().has(STYPE,PROCESS).where(__.in(E_G_B_S_I).in(E_G_B_S_O).both(E_A_N_O,N_A_E_I)).id().toList()",
        "feature_set": {
            "num_distinct_dst_ip_access":
                "g.V(IDS).local(__.in(E_G_B_S_I).in(E_G_B_S_O).both(E_A_N_O,N_A_E_I).both(E_A_N_I,N_A_E_O).values(DADDRESS).dedup().count())"
        }
    },

    "process_access_file_attributes" : {
        "description" : "Analyze process that access attributes of files",
        "instance_set": "IDS=g.V().has(STYPE,PROCESS).or(__.in(E_G_B_S_I).in(E_G_B_S_O).has(ETYPE,CHECK_FILE_ATTRIBUTES),__.in(E_G_B_S_I).in(E_G_B_S_O).has(ETYPE,MODIFY_FILE_ATTRIBUTES)).id().toList()",
        "feature_set": {
            "num_chk_attrib":
                "g.V(IDS).local(__.in(E_G_B_S_I).in(E_G_B_S_O).has(ETYPE,CHECK_FILE_ATTRIBUTES).count())",
            "num_modify_attrib":
                "g.V(IDS).local(__.in(E_G_B_S_I).in(E_G_B_S_O).has(ETYPE,MODIFY_FILE_ATTRIBUTES).count())"
        }
    },



    "files_connected_with_netflow" : {
        "description" : "Analyze files that have connection with netflow (potential downloaded files)",
        "instance_set" : "IDS=g.V().has(STYPE,EVENT).as('net_events').both(E_A_N_O,N_A_E_I).select('net_events').out(E_G_B_S_O).out(E_G_B_S_I).dedup().in(E_G_B_S_I).in(E_G_B_S_O).both(E_A_F_O,F_A_E_I).both(E_A_F_I,F_A_E_O).dedup().id().toList()",
        "feature_set" : {
            "num_exec":
                "g.V(IDS).local(__.both(F_A_E_O,E_A_F_I).both(F_A_E_I,E_A_F_O).has(ETYPE,EXECUTE).count())",
            "num_chk_attrib":
                "g.V(IDS).local(__.both(F_A_E_O,E_A_F_I).both(F_A_E_I,E_A_F_O).has(ETYPE,CHECK_FILE_ATTRIBUTES).count())",
            "num_modify_attrib":
                "g.V(IDS).local(__.both(F_A_E_O,E_A_F_I).both(F_A_E_I,E_A_F_O).has(ETYPE,MODIFY_FILE_ATTRIBUTES).count())",
            "num_rename":
                "g.V(IDS).local(__.both(F_A_E_O,E_A_F_I).both(F_A_E_I,E_A_F_O).has(ETYPE,RENAME).count())",
            "num_read":
                "g.V(IDS).local(__.both(F_A_E_O,E_A_F_I).both(F_A_E_I,E_A_F_O).has(ETYPE,READ).count())",
            "num_write":
                "g.V(IDS).local(__.both(F_A_E_O,E_A_F_I).both(F_A_E_I,E_A_F_O).has(ETYPE,WRITE).count())",
            "num_uploads":
                "g.V(IDS).local(__.both(F_A_E_O,E_A_F_I).both(F_A_E_I,E_A_F_O).has(ETYPE,READ).as('file_read').out(E_G_B_S_O).out(E_G_B_S_I).dedup().as('process').in(E_G_B_S_I).in(E_G_B_S_O).has(ETYPE,WRITE).as('netflow_write').both(E_A_N_O,N_A_E_I).select('file_read').dedup().count())",
            "num_dnlds":
                "g.V(IDS).local(__.both(F_A_E_O,E_A_F_I).both(F_A_E_I,E_A_F_O).has(ETYPE,WRITE).as('file_write').out(E_G_B_S_O).out(E_G_B_S_I).dedup().as('process').in(E_G_B_S_I).in(E_G_B_S_O).has(ETYPE,READ).as('netflow_read').both(E_A_N_O,N_A_E_I).select('file_write').dedup().count())"
        }
    },

    "files_executed" : {
        "description" : "Analyze executed files",
        "instance_set" : "IDS=g.V().has(ETYPE,EXECUTE).both(E_A_F_O,F_A_E_I).both(E_A_F_I,F_A_E_O).dedup().id().toList()",
        "feature_set" : {
            "num_exec":
                "g.V(IDS).local(__.both(F_A_E_O,E_A_F_I).both(F_A_E_I,E_A_F_O).has(ETYPE,EXECUTE).count())",
            "num_chk_attrib":
                "g.V(IDS).local(__.both(F_A_E_O,E_A_F_I).both(F_A_E_I,E_A_F_O).has(ETYPE,CHECK_FILE_ATTRIBUTES).count())",
            "num_modify_attrib":
                "g.V(IDS).local(__.both(F_A_E_O,E_A_F_I).both(F_A_E_I,E_A_F_O).has(ETYPE,MODIFY_FILE_ATTRIBUTES).count())",
            "num_rename":
                "g.V(IDS).local(__.both(F_A_E_O,E_A_F_I).both(F_A_E_I,E_A_F_O).has(ETYPE,RENAME).count())",
            "num_read":
                "g.V(IDS).local(__.both(F_A_E_O,E_A_F_I).both(F_A_E_I,E_A_F_O).has(ETYPE,READ).count())",
            "num_write":
                "g.V(IDS).local(__.both(F_A_E_O,E_A_F_I).both(F_A_E_I,E_A_F_O).has(ETYPE,WRITE).count())"
        }
    },

    "file_dnld_exec_gap" : {
        "description" : "Detect files that are executed right after download",
        "instance_set": "IDS=g.V().has(ETYPE,EXECUTE).both(E_A_F_O,F_A_E_I).both(E_A_F_I,F_A_E_O).as('files').both(F_A_E_O,E_A_F_I).both(F_A_E_I,E_A_F_O).has(ETYPE,WRITE).out(E_G_B_S_O).out(E_G_B_S_I).dedup().in(E_G_B_S_I).in(E_G_B_S_O).has(ETYPE,READ).both(E_A_N_O,N_A_E_I).select('files').dedup().id().toList()",
        "feature_set": {
            "dnld_exec_gap":{
                "first":
                    "g.V(IDS).local(__.both(F_A_E_O,E_A_F_I).both(F_A_E_I,E_A_F_O).has(ETYPE,EXECUTE).values(STIME).max())",
                "second":
                    "g.V(IDS).local(__.both(F_A_E_O,E_A_F_I).both(F_A_E_I,E_A_F_O).has(ETYPE,WRITE).as('dnld').out(E_G_B_S_O).out(E_G_B_S_I).dedup().in(E_G_B_S_I).in(E_G_B_S_O).has(ETYPE,READ).both(E_A_N_O,N_A_E_I).select('dnld').values(STIME).max())",
                "operator":
                    "RELUTime"
            }
        }
    },

    "file_attrib_change_exec_gap" : {
        "description" : "Detect files that are executed right after permission change",
        "instance_set": "IDS=g.V().has(ETYPE,EXECUTE).both(E_A_F_O,F_A_E_I).both(E_A_F_I,F_A_E_O).as('files').both(F_A_E_O,E_A_F_I).both(F_A_E_I,E_A_F_O).has(ETYPE,MODIFY_FILE_ATTRIBUTES).select('files').dedup().id().toList()",
        "feature_set": {
            "attrib_change_exec_gap":{
                "first":
                    "g.V(IDS).local(__.both(F_A_E_O,E_A_F_I).both(F_A_E_I,E_A_F_O).has(ETYPE,EXECUTE).values(STIME).max())",
                "second":
                    "g.V(IDS).local(__.both(F_A_E_O,E_A_F_I).both(F_A_E_I,E_A_F_O).has(ETYPE,MODIFY_FILE_ATTRIBUTES).values(STIME).min())",
                "operator":
                    "RELUTime"
            }
        }
    },

    "file_exec_del_gap" : {
        "description" : "Detect files that are deleted right after execution",
        "instance_set": "IDS=g.V().has(ETYPE,EXECUTE).both(E_A_F_O,F_A_E_I).both(E_A_F_I,F_A_E_O).as('files').both(F_A_E_O,E_A_F_I).both(F_A_E_I,E_A_F_O).has(ETYPE,UNLINK).select('files').dedup().id().toList()",
        "feature_set": {
            "exec_del_gap":{
                "first":
                    "g.V(IDS).local(__.both(F_A_E_O,E_A_F_I).both(F_A_E_I,E_A_F_O).has(ETYPE,UNLINK).values(STIME).max())",
                "second":
                    "g.V(IDS).local(__.both(F_A_E_O,E_A_F_I).both(F_A_E_I,E_A_F_O).has(ETYPE,EXECUTE).values(STIME).max())",
                "operator":
                    "RELUTime"
            }
        }
    },

    "file_upload_del_gap" : {
        "description" : "Detect files that are deleted right after upload",
        "instance_set": "IDS=g.V().has(ETYPE,UNLINK).both(E_A_F_O,F_A_E_I).both(E_A_F_I,F_A_E_O).as('files').both(F_A_E_O,E_A_F_I).both(F_A_E_I,E_A_F_O).has(ETYPE,READ).out(E_G_B_S_O).out(E_G_B_S_I).dedup().in(E_G_B_S_I).in(E_G_B_S_O).has(ETYPE,WRITE).both(E_A_N_O,N_A_E_I).select('files').dedup().id().toList()",
        "feature_set": {
            "upload_del_gap":{
                "first":
                    "g.V(IDS).local(__.both(F_A_E_O,E_A_F_I).both(F_A_E_I,E_A_F_O).has(ETYPE,READ).as('file_read').out(E_G_B_S_O).out(E_G_B_S_I).dedup().in(E_G_B_S_I).in(E_G_B_S_O).has(ETYPE,WRITE).as('netflow_write').both(E_A_N_O,N_A_E_I).select('file_read').values(STIME).max())",
                "second":
                    "g.V(IDS).local(__.both(F_A_E_O,E_A_F_I).both(F_A_E_I,E_A_F_O).has(ETYPE,UNLINK).values(STIME).min())",
                "operator":
                    "RELUTime"
            }
        }
    }
}
