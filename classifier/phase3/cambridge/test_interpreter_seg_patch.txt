diff --git a/tests/test_interpreter.py b/tests/test_interpreter.py
index 6ab4ef5..f211c43 100755
--- a/tests/test_interpreter.py
+++ b/tests/test_interpreter.py
@@ -78,7 +78,7 @@ def execute_module(module_key, data_path="~/adapt/example/5d_youtube_ie_output-1
         cmd = ('%s/segment/segmenter/adapt_DBsideSegmenter.py'
                ' --broker http://localhost:8182/'
                ' --store-segment Yes --spec %s/config/segmentByPID.json' % (top, top))
-        # cmd = 'classifier/phase3/simple_segments_by_pid.py --drop'
+        cmd = 'classifier/phase3/simple_segments_by_pid.py --drop'
         os.system(cmd)
     elif module_key is "ad":
         pass
@@ -127,6 +127,11 @@ def get_args():
     return parser.parse_args()
 
 
+def print1(*args):
+    print(*args)
+    sys.stdout.flush()
+
+
 def main(args):
     pipeline = module_sequence(args.module)
     data_key = args.data.split(os.sep)[-1]
@@ -135,11 +140,11 @@ def main(args):
           "\n ==> ....through module: %s" %
         (args.tests, args.data, args.module))
     for module in pipeline:
-        print("\n======================================================================\n"
-              "Executing module: %s" % module)
+        print1("\n======================================================================\n"
+               "Executing module: %s" % module)
         execute_module(module, args.data)
-        print("======================================================================\n"
-              "Running module tests: %s" % module)
+        print1("======================================================================\n"
+               "Running module tests: %s" % module)
         if run_tests_for_module(module, args.tests, data_key, args.run_all).shouldStop:
             sys.exit(1)
     if args.query is not None:
