/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.bbn.tc.schema.avro;
@SuppressWarnings("all")
/** * These event types correspond to the common system calls. Note that we added blind, unit, and update events
     *   EVENT_ACCEPT accept a connection on an object
     *   EVENT_BIND                       bind to a network endpoint object
     *   EVENT_CHANGE_PRINCIPAL           change the principal associated with the process
     *   EVENT_CHECK_FILE_ATTRIBUTES check the file attributes such as permissions
     *   EVENT_CLONE clone a subject
     *   EVENT_CLOSE                      close an object
 *   EVENT_CONNECT                    connect to an object
     * *   EVENT_CREATE_OBJECT              create an object
     * *   EVENT_CREATE_THREAD              create a thread subject
     * *   EVENT_EXECUTE                    execute an object
     *   EVENT_FORK *   fork a process subject
     *   EVENT_LINK                       link an *   object to a new name
     *   EVENT_UNLINK                     unlink a *   name from an object
     *   EVENT_MMAP                       memory map an *   object
     *   EVENT_MODIFY_FILE_ATTRIBUTES     modify the attributes of a *   file object
     *   EVENT_MPROTECT                   change permissions of *   a memory object
     *   EVENT_OPEN                       open an object
 *   *   EVENT_READ                       read from an object (file or socket)
 *   *   EVENT_RECVFROM                   receive message from a socket
     * *   EVENT_RECVMSG                    receive message from a socket
     * *   EVENT_RENAME                     rename an object
     *   EVENT_WRITE *   write to an object (file or socket)
     *   EVENT_SIGNAL *   signal another subject
     *   EVENT_TRUNCATE                   truncate *   an object
     *   EVENT_WAIT                       wait on another *   subject
     *   EVENT_KERNEL_UNKNOWN             some kernel event
     * *   EVENT_OS_UNKNOWN                 some OS layer event
     * *   EVENT_APP_UNKNOWN                some application layer event
     * *   EVENT_UI_UNKNOWN                 some UI layer event
     *   EVENT_UNKNOWN *   some event (we don't know what layer)
     *   EVENT_BLIND *   blind event for a black boxes that are not instrumented
     *   EVENT_UNIT *   create a BEEP unit
     *   EVENT_UPDATE                     update an *   object
     *   EVENT_SENDTO                     send through socket
 *   *   EVENT_SENDMSG                    send message through socket
     * *   EVENT_SHM                        share memory between processes
     * *   EVENT_EXIT                       process exit */
@org.apache.avro.specific.AvroGenerated
public enum EventType {
  EVENT_ACCEPT, EVENT_BIND, EVENT_CHANGE_PRINCIPAL, EVENT_CHECK_FILE_ATTRIBUTES, EVENT_CLONE, EVENT_CLOSE, EVENT_CONNECT, EVENT_CREATE_OBJECT, EVENT_CREATE_THREAD, EVENT_EXECUTE, EVENT_FORK, EVENT_LINK, EVENT_UNLINK, EVENT_MMAP, EVENT_MODIFY_FILE_ATTRIBUTES, EVENT_MPROTECT, EVENT_OPEN, EVENT_READ, EVENT_RECVFROM, EVENT_RECVMSG, EVENT_RENAME, EVENT_WRITE, EVENT_SIGNAL, EVENT_TRUNCATE, EVENT_WAIT, EVENT_OS_UNKNOWN, EVENT_KERNEL_UNKNOWN, EVENT_APP_UNKNOWN, EVENT_UI_UNKNOWN, EVENT_UNKNOWN, EVENT_BLIND, EVENT_UNIT, EVENT_UPDATE, EVENT_SENDTO, EVENT_SENDMSG, EVENT_SHM, EVENT_EXIT  ;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"enum\",\"name\":\"EventType\",\"namespace\":\"com.bbn.tc.schema.avro\",\"doc\":\"* These event types correspond to the common system calls. Note that we added blind, unit, and update events\\n     *   EVENT_ACCEPT accept a connection on an object\\n     *   EVENT_BIND                       bind to a network endpoint object\\n     *   EVENT_CHANGE_PRINCIPAL           change the principal associated with the process\\n     *   EVENT_CHECK_FILE_ATTRIBUTES check the file attributes such as permissions\\n     *   EVENT_CLONE clone a subject\\n     *   EVENT_CLOSE                      close an object\\n *   EVENT_CONNECT                    connect to an object\\n     * *   EVENT_CREATE_OBJECT              create an object\\n     * *   EVENT_CREATE_THREAD              create a thread subject\\n     * *   EVENT_EXECUTE                    execute an object\\n     *   EVENT_FORK *   fork a process subject\\n     *   EVENT_LINK                       link an *   object to a new name\\n     *   EVENT_UNLINK                     unlink a *   name from an object\\n     *   EVENT_MMAP                       memory map an *   object\\n     *   EVENT_MODIFY_FILE_ATTRIBUTES     modify the attributes of a *   file object\\n     *   EVENT_MPROTECT                   change permissions of *   a memory object\\n     *   EVENT_OPEN                       open an object\\n *   *   EVENT_READ                       read from an object (file or socket)\\n *   *   EVENT_RECVFROM                   receive message from a socket\\n     * *   EVENT_RECVMSG                    receive message from a socket\\n     * *   EVENT_RENAME                     rename an object\\n     *   EVENT_WRITE *   write to an object (file or socket)\\n     *   EVENT_SIGNAL *   signal another subject\\n     *   EVENT_TRUNCATE                   truncate *   an object\\n     *   EVENT_WAIT                       wait on another *   subject\\n     *   EVENT_KERNEL_UNKNOWN             some kernel event\\n     * *   EVENT_OS_UNKNOWN                 some OS layer event\\n     * *   EVENT_APP_UNKNOWN                some application layer event\\n     * *   EVENT_UI_UNKNOWN                 some UI layer event\\n     *   EVENT_UNKNOWN *   some event (we don't know what layer)\\n     *   EVENT_BLIND *   blind event for a black boxes that are not instrumented\\n     *   EVENT_UNIT *   create a BEEP unit\\n     *   EVENT_UPDATE                     update an *   object\\n     *   EVENT_SENDTO                     send through socket\\n *   *   EVENT_SENDMSG                    send message through socket\\n     * *   EVENT_SHM                        share memory between processes\\n     * *   EVENT_EXIT                       process exit\",\"symbols\":[\"EVENT_ACCEPT\",\"EVENT_BIND\",\"EVENT_CHANGE_PRINCIPAL\",\"EVENT_CHECK_FILE_ATTRIBUTES\",\"EVENT_CLONE\",\"EVENT_CLOSE\",\"EVENT_CONNECT\",\"EVENT_CREATE_OBJECT\",\"EVENT_CREATE_THREAD\",\"EVENT_EXECUTE\",\"EVENT_FORK\",\"EVENT_LINK\",\"EVENT_UNLINK\",\"EVENT_MMAP\",\"EVENT_MODIFY_FILE_ATTRIBUTES\",\"EVENT_MPROTECT\",\"EVENT_OPEN\",\"EVENT_READ\",\"EVENT_RECVFROM\",\"EVENT_RECVMSG\",\"EVENT_RENAME\",\"EVENT_WRITE\",\"EVENT_SIGNAL\",\"EVENT_TRUNCATE\",\"EVENT_WAIT\",\"EVENT_OS_UNKNOWN\",\"EVENT_KERNEL_UNKNOWN\",\"EVENT_APP_UNKNOWN\",\"EVENT_UI_UNKNOWN\",\"EVENT_UNKNOWN\",\"EVENT_BLIND\",\"EVENT_UNIT\",\"EVENT_UPDATE\",\"EVENT_SENDTO\",\"EVENT_SENDMSG\",\"EVENT_SHM\",\"EVENT_EXIT\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
}
