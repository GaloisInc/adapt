/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.bbn.tc.schema.avro.cdm14;
@SuppressWarnings("all")
/** * EventType enumerates the most common system calls. Since there
     * are hundreds of possible system calls, enumerating all of them
     * and managing the list across OS versions is a
     * challenge. EVENT_OTHER is the catch all for events not enumerated here. Any events
     * that are expected to be of importance, should be included in this list.
     *
     *   EVENT_ACCEPT                     accept a connection on an object
     *   EVENT_BIND                       bind to a network endpoint object
     *   EVENT_BLIND                      blind event for a black boxes that are not instrumented
     *   EVENT_CHANGE_PRINCIPAL           change the principal associated with the process
     *   EVENT_CHECK_FILE_ATTRIBUTES      check the file attributes such as permissions
     *   EVENT_CLONE                      clone a subject
     *   EVENT_CLOSE                      close an object
     *   EVENT_CONNECT                    connect to an object
     *   EVENT_CREATE_OBJECT              create an object
     *   EVENT_CREATE_THREAD              create a thread subject
     *   EVENT_DUP                        duplicate a file descriptor
     *   EVENT_EXECUTE                    execute an object
     *   EVENT_FNCTL                      manipulate file descriptor
     *   EVENT_FORK                       fork a process subject
     *   EVENT_LINK                       link an object to a new name
     *   EVENT_LSEEK                      reposition read/write file offset
     *   EVENT_MMAP                       memory map an object
     *   EVENT_MODIFY_FILE_ATTRIBUTES     modify the attributes of a file object
     *   EVENT_MPROTECT                   change permissions of a memory object
     *   EVENT_OPEN                       open an object
     *   EVENT_OTHER                      some other event not enumerated in CDM
     *   EVENT_READ                       read from an object (file or socket)
     *   EVENT_RECVFROM                   receive message from a socket
     *   EVENT_RECVMSG                    receive message from a socket
     *   EVENT_RENAME                     rename an object
     *   EVENT_SENDTO                     send through socket
     *   EVENT_SENDMSG                    send message through socket
     *   EVENT_SHM                        share memory between processes
     *   EVENT_SIGNAL                     signal another subject
     *   EVENT_TRUNCATE                   truncate an object
     *   EVENT_UNIT                       create a BEEP unit
     *   EVENT_UNLINK                     unlink a name from an object
     *   EVENT_UPDATE                     update an object
     *   EVENT_WAIT                       wait on another subject
     *   EVENT_WRITE                      write to an object (file or socket)
     *   EVENT_EXIT                       process exit
     *   EVENT_LOADLIBRARY                dynamically loading a library
     *   EVENT_BOOT                       indicates the sytem has booted
     *   EVENT_LOGCLEAR                   indicates a system log has been cleared
     *   EVENT_MOUNT                      indicates the mounting of a device
     *   EVENT_STARTSERVICE               indicates a service has started
     *   EVENT_LOGIN                      a subject has logged in
     *   EVENT_LOGOUT                     a subject has logged out */
@org.apache.avro.specific.AvroGenerated
public enum EventType {
  EVENT_ACCEPT, EVENT_BIND, EVENT_BLIND, EVENT_CHANGE_PRINCIPAL, EVENT_CHECK_FILE_ATTRIBUTES, EVENT_CLONE, EVENT_CLOSE, EVENT_CONNECT, EVENT_CREATE_OBJECT, EVENT_CREATE_THREAD, EVENT_DUP, EVENT_EXECUTE, EVENT_FNCTL, EVENT_FORK, EVENT_LINK, EVENT_LSEEK, EVENT_MMAP, EVENT_MODIFY_FILE_ATTRIBUTES, EVENT_MPROTECT, EVENT_OPEN, EVENT_OTHER, EVENT_READ, EVENT_RECVFROM, EVENT_RECVMSG, EVENT_RENAME, EVENT_SENDTO, EVENT_SENDMSG, EVENT_SHM, EVENT_SIGNAL, EVENT_TRUNCATE, EVENT_UNIT, EVENT_UNLINK, EVENT_UPDATE, EVENT_WAIT, EVENT_WRITE, EVENT_EXIT, EVENT_LOADLIBRARY, EVENT_BOOT, EVENT_LOGCLEAR, EVENT_MOUNT, EVENT_STARTSERVICE, EVENT_LOGIN, EVENT_LOGOUT  ;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"enum\",\"name\":\"EventType\",\"namespace\":\"com.bbn.tc.schema.avro\",\"doc\":\"* EventType enumerates the most common system calls. Since there\\n     * are hundreds of possible system calls, enumerating all of them\\n     * and managing the list across OS versions is a\\n     * challenge. EVENT_OTHER is the catch all for events not enumerated here. Any events\\n     * that are expected to be of importance, should be included in this list.\\n     *\\n     *   EVENT_ACCEPT                     accept a connection on an object\\n     *   EVENT_BIND                       bind to a network endpoint object\\n     *   EVENT_BLIND                      blind event for a black boxes that are not instrumented\\n     *   EVENT_CHANGE_PRINCIPAL           change the principal associated with the process\\n     *   EVENT_CHECK_FILE_ATTRIBUTES      check the file attributes such as permissions\\n     *   EVENT_CLONE                      clone a subject\\n     *   EVENT_CLOSE                      close an object\\n     *   EVENT_CONNECT                    connect to an object\\n     *   EVENT_CREATE_OBJECT              create an object\\n     *   EVENT_CREATE_THREAD              create a thread subject\\n     *   EVENT_DUP                        duplicate a file descriptor\\n     *   EVENT_EXECUTE                    execute an object\\n     *   EVENT_FNCTL                      manipulate file descriptor\\n     *   EVENT_FORK                       fork a process subject\\n     *   EVENT_LINK                       link an object to a new name\\n     *   EVENT_LSEEK                      reposition read/write file offset\\n     *   EVENT_MMAP                       memory map an object\\n     *   EVENT_MODIFY_FILE_ATTRIBUTES     modify the attributes of a file object\\n     *   EVENT_MPROTECT                   change permissions of a memory object\\n     *   EVENT_OPEN                       open an object\\n     *   EVENT_OTHER                      some other event not enumerated in CDM\\n     *   EVENT_READ                       read from an object (file or socket)\\n     *   EVENT_RECVFROM                   receive message from a socket\\n     *   EVENT_RECVMSG                    receive message from a socket\\n     *   EVENT_RENAME                     rename an object\\n     *   EVENT_SENDTO                     send through socket\\n     *   EVENT_SENDMSG                    send message through socket\\n     *   EVENT_SHM                        share memory between processes\\n     *   EVENT_SIGNAL                     signal another subject\\n     *   EVENT_TRUNCATE                   truncate an object\\n     *   EVENT_UNIT                       create a BEEP unit\\n     *   EVENT_UNLINK                     unlink a name from an object\\n     *   EVENT_UPDATE                     update an object\\n     *   EVENT_WAIT                       wait on another subject\\n     *   EVENT_WRITE                      write to an object (file or socket)\\n     *   EVENT_EXIT                       process exit\\n     *   EVENT_LOADLIBRARY                dynamically loading a library\\n     *   EVENT_BOOT                       indicates the sytem has booted\\n     *   EVENT_LOGCLEAR                   indicates a system log has been cleared\\n     *   EVENT_MOUNT                      indicates the mounting of a device\\n     *   EVENT_STARTSERVICE               indicates a service has started\\n     *   EVENT_LOGIN                      a subject has logged in\\n     *   EVENT_LOGOUT                     a subject has logged out\",\"symbols\":[\"EVENT_ACCEPT\",\"EVENT_BIND\",\"EVENT_BLIND\",\"EVENT_CHANGE_PRINCIPAL\",\"EVENT_CHECK_FILE_ATTRIBUTES\",\"EVENT_CLONE\",\"EVENT_CLOSE\",\"EVENT_CONNECT\",\"EVENT_CREATE_OBJECT\",\"EVENT_CREATE_THREAD\",\"EVENT_DUP\",\"EVENT_EXECUTE\",\"EVENT_FNCTL\",\"EVENT_FORK\",\"EVENT_LINK\",\"EVENT_LSEEK\",\"EVENT_MMAP\",\"EVENT_MODIFY_FILE_ATTRIBUTES\",\"EVENT_MPROTECT\",\"EVENT_OPEN\",\"EVENT_OTHER\",\"EVENT_READ\",\"EVENT_RECVFROM\",\"EVENT_RECVMSG\",\"EVENT_RENAME\",\"EVENT_SENDTO\",\"EVENT_SENDMSG\",\"EVENT_SHM\",\"EVENT_SIGNAL\",\"EVENT_TRUNCATE\",\"EVENT_UNIT\",\"EVENT_UNLINK\",\"EVENT_UPDATE\",\"EVENT_WAIT\",\"EVENT_WRITE\",\"EVENT_EXIT\",\"EVENT_LOADLIBRARY\",\"EVENT_BOOT\",\"EVENT_LOGCLEAR\",\"EVENT_MOUNT\",\"EVENT_STARTSERVICE\",\"EVENT_LOGIN\",\"EVENT_LOGOUT\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
}
