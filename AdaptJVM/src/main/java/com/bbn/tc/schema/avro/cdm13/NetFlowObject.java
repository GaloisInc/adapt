/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.bbn.tc.schema.avro.cdm13;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** * Represents a network flow object. Instantiates an AbstractObject. */
@org.apache.avro.specific.AvroGenerated
public class NetFlowObject extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3649635829730260768L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"NetFlowObject\",\"namespace\":\"com.bbn.tc.schema.avro.cdm13\",\"doc\":\"* Represents a network flow object. Instantiates an AbstractObject.\",\"fields\":[{\"name\":\"uuid\",\"type\":{\"type\":\"fixed\",\"name\":\"UUID\",\"size\":16},\"doc\":\"Universally unique identifier for the object\"},{\"name\":\"baseObject\",\"type\":{\"type\":\"record\",\"name\":\"AbstractObject\",\"doc\":\"*  Objects, in general, represent data sources and sinks which could include sockets, files,\\n     *  memory, and any data in general that can be an input and/or output to an event.\\n     *  This record is intended to be abstract i.e., one should not instantiate an Object\\n     *  but rather instantiate one of its sub types File, NetFlow, of Memory\",\"fields\":[{\"name\":\"source\",\"type\":{\"type\":\"enum\",\"name\":\"InstrumentationSource\",\"doc\":\"* SOURCE_LINUX_AUDIT_TRACE,          from Linux /dev/audit\\n * SOURCE_LINUX_PROC_TRACE,           from Linux's /proc\\n     * * SOURCE_LINUX_BEEP_TRACE,           from BEEP instrumentation\\n     * * SOURCE_FREEBSD_OPENBSM_TRACE,      from FreeBSD openBSM\\n     * * SOURCE_ANDROID_JAVA_CLEARSCOPE,    from android java instrumentation\\n     * * SOURCE_ANDROID_NATIVE_CLEARSCOPE,  from android's native instrumentation\\n * * SOURCE_FREEBSD_DTRACE_CADETS, SOURCE_FREEBSD_TESLA_CADETS  for CADETS * freebsd instrumentation\\n     * SOURCE_FREEBSD_LOOM_CADETS, * SOURCE_FREEBSD_MACIF_CADETS    for CADETS freebsd instrumentation\\n     * * SOURCE_LINUX_THEIA                 from the GATech THEIA instrumentation * source\\n     * SOURCE_WINDOWS_FIVEDIRECTIONS      for the fivedirections * windows events\",\"symbols\":[\"SOURCE_LINUX_AUDIT_TRACE\",\"SOURCE_LINUX_PROC_TRACE\",\"SOURCE_LINUX_BEEP_TRACE\",\"SOURCE_FREEBSD_OPENBSM_TRACE\",\"SOURCE_ANDROID_JAVA_CLEARSCOPE\",\"SOURCE_ANDROID_NATIVE_CLEARSCOPE\",\"SOURCE_FREEBSD_DTRACE_CADETS\",\"SOURCE_FREEBSD_TESLA_CADETS\",\"SOURCE_FREEBSD_LOOM_CADETS\",\"SOURCE_FREEBSD_MACIF_CADETS\",\"SOURCE_WINDOWS_DIFT_FAROS\",\"SOURCE_LINUX_THEIA\",\"SOURCE_WINDOWS_FIVEDIRECTIONS\"]},\"doc\":\"The source that emitted the object, see InstrumentationSource\"},{\"name\":\"permission\",\"type\":[\"null\",{\"type\":\"fixed\",\"name\":\"SHORT\",\"size\":2}],\"doc\":\"Permission bits defined over the object (Optional)\",\"default\":null},{\"name\":\"lastTimestampMicros\",\"type\":[\"null\",\"long\"],\"doc\":\"* The timestamp when the object was last modified (Optional).\\n        * A timestamp stores the number of microseconds from the unix epoch, 1 January 1970 00:00:00.000000 UTC.\",\"default\":null},{\"name\":\"properties\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Arbitrary key, value pairs describing the entity\",\"default\":null}]},\"doc\":\"The base object attributes\"},{\"name\":\"srcAddress\",\"type\":\"string\",\"doc\":\"The ip address of the source host for this flow\"},{\"name\":\"srcPort\",\"type\":\"int\",\"doc\":\"The network port on the source host for this flow\"},{\"name\":\"destAddress\",\"type\":\"string\",\"doc\":\"The ip address of the destination host for this flow\"},{\"name\":\"destPort\",\"type\":\"int\",\"doc\":\"The network port on the destination host for this flow\"},{\"name\":\"ipProtocol\",\"type\":[\"null\",\"int\"],\"doc\":\"The IP protocol number e.g., TCP=6\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Universally unique identifier for the object */
  @Deprecated public com.bbn.tc.schema.avro.cdm13.UUID uuid;
  /** The base object attributes */
  @Deprecated public com.bbn.tc.schema.avro.cdm13.AbstractObject baseObject;
  /** The ip address of the source host for this flow */
  @Deprecated public java.lang.CharSequence srcAddress;
  /** The network port on the source host for this flow */
  @Deprecated public int srcPort;
  /** The ip address of the destination host for this flow */
  @Deprecated public java.lang.CharSequence destAddress;
  /** The network port on the destination host for this flow */
  @Deprecated public int destPort;
  /** The IP protocol number e.g., TCP=6 */
  @Deprecated public java.lang.Integer ipProtocol;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public NetFlowObject() {}

  /**
   * All-args constructor.
   * @param uuid Universally unique identifier for the object
   * @param baseObject The base object attributes
   * @param srcAddress The ip address of the source host for this flow
   * @param srcPort The network port on the source host for this flow
   * @param destAddress The ip address of the destination host for this flow
   * @param destPort The network port on the destination host for this flow
   * @param ipProtocol The IP protocol number e.g., TCP=6
   */
  public NetFlowObject(com.bbn.tc.schema.avro.cdm13.UUID uuid, com.bbn.tc.schema.avro.cdm13.AbstractObject baseObject, java.lang.CharSequence srcAddress, java.lang.Integer srcPort, java.lang.CharSequence destAddress, java.lang.Integer destPort, java.lang.Integer ipProtocol) {
    this.uuid = uuid;
    this.baseObject = baseObject;
    this.srcAddress = srcAddress;
    this.srcPort = srcPort;
    this.destAddress = destAddress;
    this.destPort = destPort;
    this.ipProtocol = ipProtocol;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return uuid;
    case 1: return baseObject;
    case 2: return srcAddress;
    case 3: return srcPort;
    case 4: return destAddress;
    case 5: return destPort;
    case 6: return ipProtocol;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: uuid = (com.bbn.tc.schema.avro.cdm13.UUID)value$; break;
    case 1: baseObject = (com.bbn.tc.schema.avro.cdm13.AbstractObject)value$; break;
    case 2: srcAddress = (java.lang.CharSequence)value$; break;
    case 3: srcPort = (java.lang.Integer)value$; break;
    case 4: destAddress = (java.lang.CharSequence)value$; break;
    case 5: destPort = (java.lang.Integer)value$; break;
    case 6: ipProtocol = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'uuid' field.
   * @return Universally unique identifier for the object
   */
  public com.bbn.tc.schema.avro.cdm13.UUID getUuid() {
    return uuid;
  }

  /**
   * Sets the value of the 'uuid' field.
   * Universally unique identifier for the object
   * @param value the value to set.
   */
  public void setUuid(com.bbn.tc.schema.avro.cdm13.UUID value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'baseObject' field.
   * @return The base object attributes
   */
  public com.bbn.tc.schema.avro.cdm13.AbstractObject getBaseObject() {
    return baseObject;
  }

  /**
   * Sets the value of the 'baseObject' field.
   * The base object attributes
   * @param value the value to set.
   */
  public void setBaseObject(com.bbn.tc.schema.avro.cdm13.AbstractObject value) {
    this.baseObject = value;
  }

  /**
   * Gets the value of the 'srcAddress' field.
   * @return The ip address of the source host for this flow
   */
  public java.lang.CharSequence getSrcAddress() {
    return srcAddress;
  }

  /**
   * Sets the value of the 'srcAddress' field.
   * The ip address of the source host for this flow
   * @param value the value to set.
   */
  public void setSrcAddress(java.lang.CharSequence value) {
    this.srcAddress = value;
  }

  /**
   * Gets the value of the 'srcPort' field.
   * @return The network port on the source host for this flow
   */
  public java.lang.Integer getSrcPort() {
    return srcPort;
  }

  /**
   * Sets the value of the 'srcPort' field.
   * The network port on the source host for this flow
   * @param value the value to set.
   */
  public void setSrcPort(java.lang.Integer value) {
    this.srcPort = value;
  }

  /**
   * Gets the value of the 'destAddress' field.
   * @return The ip address of the destination host for this flow
   */
  public java.lang.CharSequence getDestAddress() {
    return destAddress;
  }

  /**
   * Sets the value of the 'destAddress' field.
   * The ip address of the destination host for this flow
   * @param value the value to set.
   */
  public void setDestAddress(java.lang.CharSequence value) {
    this.destAddress = value;
  }

  /**
   * Gets the value of the 'destPort' field.
   * @return The network port on the destination host for this flow
   */
  public java.lang.Integer getDestPort() {
    return destPort;
  }

  /**
   * Sets the value of the 'destPort' field.
   * The network port on the destination host for this flow
   * @param value the value to set.
   */
  public void setDestPort(java.lang.Integer value) {
    this.destPort = value;
  }

  /**
   * Gets the value of the 'ipProtocol' field.
   * @return The IP protocol number e.g., TCP=6
   */
  public java.lang.Integer getIpProtocol() {
    return ipProtocol;
  }

  /**
   * Sets the value of the 'ipProtocol' field.
   * The IP protocol number e.g., TCP=6
   * @param value the value to set.
   */
  public void setIpProtocol(java.lang.Integer value) {
    this.ipProtocol = value;
  }

  /**
   * Creates a new NetFlowObject RecordBuilder.
   * @return A new NetFlowObject RecordBuilder
   */
  public static com.bbn.tc.schema.avro.cdm13.NetFlowObject.Builder newBuilder() {
    return new com.bbn.tc.schema.avro.cdm13.NetFlowObject.Builder();
  }

  /**
   * Creates a new NetFlowObject RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new NetFlowObject RecordBuilder
   */
  public static com.bbn.tc.schema.avro.cdm13.NetFlowObject.Builder newBuilder(com.bbn.tc.schema.avro.cdm13.NetFlowObject.Builder other) {
    return new com.bbn.tc.schema.avro.cdm13.NetFlowObject.Builder(other);
  }

  /**
   * Creates a new NetFlowObject RecordBuilder by copying an existing NetFlowObject instance.
   * @param other The existing instance to copy.
   * @return A new NetFlowObject RecordBuilder
   */
  public static com.bbn.tc.schema.avro.cdm13.NetFlowObject.Builder newBuilder(com.bbn.tc.schema.avro.cdm13.NetFlowObject other) {
    return new com.bbn.tc.schema.avro.cdm13.NetFlowObject.Builder(other);
  }

  /**
   * RecordBuilder for NetFlowObject instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<NetFlowObject>
    implements org.apache.avro.data.RecordBuilder<NetFlowObject> {

    /** Universally unique identifier for the object */
    private com.bbn.tc.schema.avro.cdm13.UUID uuid;
    /** The base object attributes */
    private com.bbn.tc.schema.avro.cdm13.AbstractObject baseObject;
    private com.bbn.tc.schema.avro.cdm13.AbstractObject.Builder baseObjectBuilder;
    /** The ip address of the source host for this flow */
    private java.lang.CharSequence srcAddress;
    /** The network port on the source host for this flow */
    private int srcPort;
    /** The ip address of the destination host for this flow */
    private java.lang.CharSequence destAddress;
    /** The network port on the destination host for this flow */
    private int destPort;
    /** The IP protocol number e.g., TCP=6 */
    private java.lang.Integer ipProtocol;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.bbn.tc.schema.avro.cdm13.NetFlowObject.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.baseObject)) {
        this.baseObject = data().deepCopy(fields()[1].schema(), other.baseObject);
        fieldSetFlags()[1] = true;
      }
      if (other.hasBaseObjectBuilder()) {
        this.baseObjectBuilder = com.bbn.tc.schema.avro.cdm13.AbstractObject.newBuilder(other.getBaseObjectBuilder());
      }
      if (isValidValue(fields()[2], other.srcAddress)) {
        this.srcAddress = data().deepCopy(fields()[2].schema(), other.srcAddress);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.srcPort)) {
        this.srcPort = data().deepCopy(fields()[3].schema(), other.srcPort);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.destAddress)) {
        this.destAddress = data().deepCopy(fields()[4].schema(), other.destAddress);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.destPort)) {
        this.destPort = data().deepCopy(fields()[5].schema(), other.destPort);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.ipProtocol)) {
        this.ipProtocol = data().deepCopy(fields()[6].schema(), other.ipProtocol);
        fieldSetFlags()[6] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing NetFlowObject instance
     * @param other The existing instance to copy.
     */
    private Builder(com.bbn.tc.schema.avro.cdm13.NetFlowObject other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.baseObject)) {
        this.baseObject = data().deepCopy(fields()[1].schema(), other.baseObject);
        fieldSetFlags()[1] = true;
      }
      this.baseObjectBuilder = null;
      if (isValidValue(fields()[2], other.srcAddress)) {
        this.srcAddress = data().deepCopy(fields()[2].schema(), other.srcAddress);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.srcPort)) {
        this.srcPort = data().deepCopy(fields()[3].schema(), other.srcPort);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.destAddress)) {
        this.destAddress = data().deepCopy(fields()[4].schema(), other.destAddress);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.destPort)) {
        this.destPort = data().deepCopy(fields()[5].schema(), other.destPort);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.ipProtocol)) {
        this.ipProtocol = data().deepCopy(fields()[6].schema(), other.ipProtocol);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'uuid' field.
      * Universally unique identifier for the object
      * @return The value.
      */
    public com.bbn.tc.schema.avro.cdm13.UUID getUuid() {
      return uuid;
    }

    /**
      * Sets the value of the 'uuid' field.
      * Universally unique identifier for the object
      * @param value The value of 'uuid'.
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm13.NetFlowObject.Builder setUuid(com.bbn.tc.schema.avro.cdm13.UUID value) {
      validate(fields()[0], value);
      this.uuid = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'uuid' field has been set.
      * Universally unique identifier for the object
      * @return True if the 'uuid' field has been set, false otherwise.
      */
    public boolean hasUuid() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'uuid' field.
      * Universally unique identifier for the object
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm13.NetFlowObject.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'baseObject' field.
      * The base object attributes
      * @return The value.
      */
    public com.bbn.tc.schema.avro.cdm13.AbstractObject getBaseObject() {
      return baseObject;
    }

    /**
      * Sets the value of the 'baseObject' field.
      * The base object attributes
      * @param value The value of 'baseObject'.
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm13.NetFlowObject.Builder setBaseObject(com.bbn.tc.schema.avro.cdm13.AbstractObject value) {
      validate(fields()[1], value);
      this.baseObjectBuilder = null;
      this.baseObject = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'baseObject' field has been set.
      * The base object attributes
      * @return True if the 'baseObject' field has been set, false otherwise.
      */
    public boolean hasBaseObject() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'baseObject' field and creates one if it doesn't exist yet.
     * The base object attributes
     * @return This builder.
     */
    public com.bbn.tc.schema.avro.cdm13.AbstractObject.Builder getBaseObjectBuilder() {
      if (baseObjectBuilder == null) {
        if (hasBaseObject()) {
          setBaseObjectBuilder(com.bbn.tc.schema.avro.cdm13.AbstractObject.newBuilder(baseObject));
        } else {
          setBaseObjectBuilder(com.bbn.tc.schema.avro.cdm13.AbstractObject.newBuilder());
        }
      }
      return baseObjectBuilder;
    }

    /**
     * Sets the Builder instance for the 'baseObject' field
     * The base object attributes
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.bbn.tc.schema.avro.cdm13.NetFlowObject.Builder setBaseObjectBuilder(com.bbn.tc.schema.avro.cdm13.AbstractObject.Builder value) {
      clearBaseObject();
      baseObjectBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'baseObject' field has an active Builder instance
     * The base object attributes
     * @return True if the 'baseObject' field has an active Builder instance
     */
    public boolean hasBaseObjectBuilder() {
      return baseObjectBuilder != null;
    }

    /**
      * Clears the value of the 'baseObject' field.
      * The base object attributes
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm13.NetFlowObject.Builder clearBaseObject() {
      baseObject = null;
      baseObjectBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'srcAddress' field.
      * The ip address of the source host for this flow
      * @return The value.
      */
    public java.lang.CharSequence getSrcAddress() {
      return srcAddress;
    }

    /**
      * Sets the value of the 'srcAddress' field.
      * The ip address of the source host for this flow
      * @param value The value of 'srcAddress'.
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm13.NetFlowObject.Builder setSrcAddress(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.srcAddress = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'srcAddress' field has been set.
      * The ip address of the source host for this flow
      * @return True if the 'srcAddress' field has been set, false otherwise.
      */
    public boolean hasSrcAddress() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'srcAddress' field.
      * The ip address of the source host for this flow
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm13.NetFlowObject.Builder clearSrcAddress() {
      srcAddress = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'srcPort' field.
      * The network port on the source host for this flow
      * @return The value.
      */
    public java.lang.Integer getSrcPort() {
      return srcPort;
    }

    /**
      * Sets the value of the 'srcPort' field.
      * The network port on the source host for this flow
      * @param value The value of 'srcPort'.
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm13.NetFlowObject.Builder setSrcPort(int value) {
      validate(fields()[3], value);
      this.srcPort = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'srcPort' field has been set.
      * The network port on the source host for this flow
      * @return True if the 'srcPort' field has been set, false otherwise.
      */
    public boolean hasSrcPort() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'srcPort' field.
      * The network port on the source host for this flow
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm13.NetFlowObject.Builder clearSrcPort() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'destAddress' field.
      * The ip address of the destination host for this flow
      * @return The value.
      */
    public java.lang.CharSequence getDestAddress() {
      return destAddress;
    }

    /**
      * Sets the value of the 'destAddress' field.
      * The ip address of the destination host for this flow
      * @param value The value of 'destAddress'.
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm13.NetFlowObject.Builder setDestAddress(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.destAddress = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'destAddress' field has been set.
      * The ip address of the destination host for this flow
      * @return True if the 'destAddress' field has been set, false otherwise.
      */
    public boolean hasDestAddress() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'destAddress' field.
      * The ip address of the destination host for this flow
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm13.NetFlowObject.Builder clearDestAddress() {
      destAddress = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'destPort' field.
      * The network port on the destination host for this flow
      * @return The value.
      */
    public java.lang.Integer getDestPort() {
      return destPort;
    }

    /**
      * Sets the value of the 'destPort' field.
      * The network port on the destination host for this flow
      * @param value The value of 'destPort'.
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm13.NetFlowObject.Builder setDestPort(int value) {
      validate(fields()[5], value);
      this.destPort = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'destPort' field has been set.
      * The network port on the destination host for this flow
      * @return True if the 'destPort' field has been set, false otherwise.
      */
    public boolean hasDestPort() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'destPort' field.
      * The network port on the destination host for this flow
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm13.NetFlowObject.Builder clearDestPort() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'ipProtocol' field.
      * The IP protocol number e.g., TCP=6
      * @return The value.
      */
    public java.lang.Integer getIpProtocol() {
      return ipProtocol;
    }

    /**
      * Sets the value of the 'ipProtocol' field.
      * The IP protocol number e.g., TCP=6
      * @param value The value of 'ipProtocol'.
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm13.NetFlowObject.Builder setIpProtocol(java.lang.Integer value) {
      validate(fields()[6], value);
      this.ipProtocol = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'ipProtocol' field has been set.
      * The IP protocol number e.g., TCP=6
      * @return True if the 'ipProtocol' field has been set, false otherwise.
      */
    public boolean hasIpProtocol() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'ipProtocol' field.
      * The IP protocol number e.g., TCP=6
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm13.NetFlowObject.Builder clearIpProtocol() {
      ipProtocol = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public NetFlowObject build() {
      try {
        NetFlowObject record = new NetFlowObject();
        record.uuid = fieldSetFlags()[0] ? this.uuid : (com.bbn.tc.schema.avro.cdm13.UUID) defaultValue(fields()[0]);
        if (baseObjectBuilder != null) {
          record.baseObject = this.baseObjectBuilder.build();
        } else {
          record.baseObject = fieldSetFlags()[1] ? this.baseObject : (com.bbn.tc.schema.avro.cdm13.AbstractObject) defaultValue(fields()[1]);
        }
        record.srcAddress = fieldSetFlags()[2] ? this.srcAddress : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.srcPort = fieldSetFlags()[3] ? this.srcPort : (java.lang.Integer) defaultValue(fields()[3]);
        record.destAddress = fieldSetFlags()[4] ? this.destAddress : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.destPort = fieldSetFlags()[5] ? this.destPort : (java.lang.Integer) defaultValue(fields()[5]);
        record.ipProtocol = fieldSetFlags()[6] ? this.ipProtocol : (java.lang.Integer) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
