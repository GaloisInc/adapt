/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.bbn.tc.schema.avro.cdm18;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** * TheiaQueryResult used to indicate that the fine-grained analysis created
     * by a query has finished */
@org.apache.avro.specific.AvroGenerated
public class TheiaQueryResult extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3357062508482880456L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TheiaQueryResult\",\"namespace\":\"com.bbn.tc.schema.avro.cdm18\",\"doc\":\"* TheiaQueryResult used to indicate that the fine-grained analysis created\\n     * by a query has finished\",\"fields\":[{\"name\":\"queryId\",\"type\":{\"type\":\"fixed\",\"name\":\"UUID\",\"size\":16}},{\"name\":\"tagIds\",\"type\":{\"type\":\"array\",\"items\":\"UUID\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public com.bbn.tc.schema.avro.cdm18.UUID queryId;
  @Deprecated public java.util.List<com.bbn.tc.schema.avro.cdm18.UUID> tagIds;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TheiaQueryResult() {}

  /**
   * All-args constructor.
   * @param queryId The new value for queryId
   * @param tagIds The new value for tagIds
   */
  public TheiaQueryResult(com.bbn.tc.schema.avro.cdm18.UUID queryId, java.util.List<com.bbn.tc.schema.avro.cdm18.UUID> tagIds) {
    this.queryId = queryId;
    this.tagIds = tagIds;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return queryId;
    case 1: return tagIds;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: queryId = (com.bbn.tc.schema.avro.cdm18.UUID)value$; break;
    case 1: tagIds = (java.util.List<com.bbn.tc.schema.avro.cdm18.UUID>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'queryId' field.
   * @return The value of the 'queryId' field.
   */
  public com.bbn.tc.schema.avro.cdm18.UUID getQueryId() {
    return queryId;
  }

  /**
   * Sets the value of the 'queryId' field.
   * @param value the value to set.
   */
  public void setQueryId(com.bbn.tc.schema.avro.cdm18.UUID value) {
    this.queryId = value;
  }

  /**
   * Gets the value of the 'tagIds' field.
   * @return The value of the 'tagIds' field.
   */
  public java.util.List<com.bbn.tc.schema.avro.cdm18.UUID> getTagIds() {
    return tagIds;
  }

  /**
   * Sets the value of the 'tagIds' field.
   * @param value the value to set.
   */
  public void setTagIds(java.util.List<com.bbn.tc.schema.avro.cdm18.UUID> value) {
    this.tagIds = value;
  }

  /**
   * Creates a new TheiaQueryResult RecordBuilder.
   * @return A new TheiaQueryResult RecordBuilder
   */
  public static com.bbn.tc.schema.avro.cdm18.TheiaQueryResult.Builder newBuilder() {
    return new com.bbn.tc.schema.avro.cdm18.TheiaQueryResult.Builder();
  }

  /**
   * Creates a new TheiaQueryResult RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TheiaQueryResult RecordBuilder
   */
  public static com.bbn.tc.schema.avro.cdm18.TheiaQueryResult.Builder newBuilder(com.bbn.tc.schema.avro.cdm18.TheiaQueryResult.Builder other) {
    return new com.bbn.tc.schema.avro.cdm18.TheiaQueryResult.Builder(other);
  }

  /**
   * Creates a new TheiaQueryResult RecordBuilder by copying an existing TheiaQueryResult instance.
   * @param other The existing instance to copy.
   * @return A new TheiaQueryResult RecordBuilder
   */
  public static com.bbn.tc.schema.avro.cdm18.TheiaQueryResult.Builder newBuilder(com.bbn.tc.schema.avro.cdm18.TheiaQueryResult other) {
    return new com.bbn.tc.schema.avro.cdm18.TheiaQueryResult.Builder(other);
  }

  /**
   * RecordBuilder for TheiaQueryResult instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TheiaQueryResult>
    implements org.apache.avro.data.RecordBuilder<TheiaQueryResult> {

    private com.bbn.tc.schema.avro.cdm18.UUID queryId;
    private java.util.List<com.bbn.tc.schema.avro.cdm18.UUID> tagIds;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.bbn.tc.schema.avro.cdm18.TheiaQueryResult.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.queryId)) {
        this.queryId = data().deepCopy(fields()[0].schema(), other.queryId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.tagIds)) {
        this.tagIds = data().deepCopy(fields()[1].schema(), other.tagIds);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing TheiaQueryResult instance
     * @param other The existing instance to copy.
     */
    private Builder(com.bbn.tc.schema.avro.cdm18.TheiaQueryResult other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.queryId)) {
        this.queryId = data().deepCopy(fields()[0].schema(), other.queryId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.tagIds)) {
        this.tagIds = data().deepCopy(fields()[1].schema(), other.tagIds);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'queryId' field.
      * @return The value.
      */
    public com.bbn.tc.schema.avro.cdm18.UUID getQueryId() {
      return queryId;
    }

    /**
      * Sets the value of the 'queryId' field.
      * @param value The value of 'queryId'.
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm18.TheiaQueryResult.Builder setQueryId(com.bbn.tc.schema.avro.cdm18.UUID value) {
      validate(fields()[0], value);
      this.queryId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'queryId' field has been set.
      * @return True if the 'queryId' field has been set, false otherwise.
      */
    public boolean hasQueryId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'queryId' field.
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm18.TheiaQueryResult.Builder clearQueryId() {
      queryId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'tagIds' field.
      * @return The value.
      */
    public java.util.List<com.bbn.tc.schema.avro.cdm18.UUID> getTagIds() {
      return tagIds;
    }

    /**
      * Sets the value of the 'tagIds' field.
      * @param value The value of 'tagIds'.
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm18.TheiaQueryResult.Builder setTagIds(java.util.List<com.bbn.tc.schema.avro.cdm18.UUID> value) {
      validate(fields()[1], value);
      this.tagIds = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'tagIds' field has been set.
      * @return True if the 'tagIds' field has been set, false otherwise.
      */
    public boolean hasTagIds() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'tagIds' field.
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm18.TheiaQueryResult.Builder clearTagIds() {
      tagIds = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public TheiaQueryResult build() {
      try {
        TheiaQueryResult record = new TheiaQueryResult();
        record.queryId = fieldSetFlags()[0] ? this.queryId : (com.bbn.tc.schema.avro.cdm18.UUID) defaultValue(fields()[0]);
        record.tagIds = fieldSetFlags()[1] ? this.tagIds : (java.util.List<com.bbn.tc.schema.avro.cdm18.UUID>) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
