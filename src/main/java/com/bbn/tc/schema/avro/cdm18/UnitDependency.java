/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.bbn.tc.schema.avro.cdm18;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** * This record captures a relationship edge between two units, one
     * dependent on the other. This relationship is inferred from a
     * combination of underlying events. */
@org.apache.avro.specific.AvroGenerated
public class UnitDependency extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3967744680147442792L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UnitDependency\",\"namespace\":\"com.bbn.tc.schema.avro.cdm18\",\"doc\":\"* This record captures a relationship edge between two units, one\\n     * dependent on the other. This relationship is inferred from a\\n     * combination of underlying events.\",\"fields\":[{\"name\":\"unit\",\"type\":{\"type\":\"fixed\",\"name\":\"UUID\",\"size\":16}},{\"name\":\"dependentUnit\",\"type\":\"UUID\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public com.bbn.tc.schema.avro.cdm18.UUID unit;
  @Deprecated public com.bbn.tc.schema.avro.cdm18.UUID dependentUnit;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public UnitDependency() {}

  /**
   * All-args constructor.
   * @param unit The new value for unit
   * @param dependentUnit The new value for dependentUnit
   */
  public UnitDependency(com.bbn.tc.schema.avro.cdm18.UUID unit, com.bbn.tc.schema.avro.cdm18.UUID dependentUnit) {
    this.unit = unit;
    this.dependentUnit = dependentUnit;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return unit;
    case 1: return dependentUnit;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: unit = (com.bbn.tc.schema.avro.cdm18.UUID)value$; break;
    case 1: dependentUnit = (com.bbn.tc.schema.avro.cdm18.UUID)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'unit' field.
   * @return The value of the 'unit' field.
   */
  public com.bbn.tc.schema.avro.cdm18.UUID getUnit() {
    return unit;
  }

  /**
   * Sets the value of the 'unit' field.
   * @param value the value to set.
   */
  public void setUnit(com.bbn.tc.schema.avro.cdm18.UUID value) {
    this.unit = value;
  }

  /**
   * Gets the value of the 'dependentUnit' field.
   * @return The value of the 'dependentUnit' field.
   */
  public com.bbn.tc.schema.avro.cdm18.UUID getDependentUnit() {
    return dependentUnit;
  }

  /**
   * Sets the value of the 'dependentUnit' field.
   * @param value the value to set.
   */
  public void setDependentUnit(com.bbn.tc.schema.avro.cdm18.UUID value) {
    this.dependentUnit = value;
  }

  /**
   * Creates a new UnitDependency RecordBuilder.
   * @return A new UnitDependency RecordBuilder
   */
  public static com.bbn.tc.schema.avro.cdm18.UnitDependency.Builder newBuilder() {
    return new com.bbn.tc.schema.avro.cdm18.UnitDependency.Builder();
  }

  /**
   * Creates a new UnitDependency RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new UnitDependency RecordBuilder
   */
  public static com.bbn.tc.schema.avro.cdm18.UnitDependency.Builder newBuilder(com.bbn.tc.schema.avro.cdm18.UnitDependency.Builder other) {
    return new com.bbn.tc.schema.avro.cdm18.UnitDependency.Builder(other);
  }

  /**
   * Creates a new UnitDependency RecordBuilder by copying an existing UnitDependency instance.
   * @param other The existing instance to copy.
   * @return A new UnitDependency RecordBuilder
   */
  public static com.bbn.tc.schema.avro.cdm18.UnitDependency.Builder newBuilder(com.bbn.tc.schema.avro.cdm18.UnitDependency other) {
    return new com.bbn.tc.schema.avro.cdm18.UnitDependency.Builder(other);
  }

  /**
   * RecordBuilder for UnitDependency instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UnitDependency>
    implements org.apache.avro.data.RecordBuilder<UnitDependency> {

    private com.bbn.tc.schema.avro.cdm18.UUID unit;
    private com.bbn.tc.schema.avro.cdm18.UUID dependentUnit;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.bbn.tc.schema.avro.cdm18.UnitDependency.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.unit)) {
        this.unit = data().deepCopy(fields()[0].schema(), other.unit);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.dependentUnit)) {
        this.dependentUnit = data().deepCopy(fields()[1].schema(), other.dependentUnit);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing UnitDependency instance
     * @param other The existing instance to copy.
     */
    private Builder(com.bbn.tc.schema.avro.cdm18.UnitDependency other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.unit)) {
        this.unit = data().deepCopy(fields()[0].schema(), other.unit);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.dependentUnit)) {
        this.dependentUnit = data().deepCopy(fields()[1].schema(), other.dependentUnit);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'unit' field.
      * @return The value.
      */
    public com.bbn.tc.schema.avro.cdm18.UUID getUnit() {
      return unit;
    }

    /**
      * Sets the value of the 'unit' field.
      * @param value The value of 'unit'.
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm18.UnitDependency.Builder setUnit(com.bbn.tc.schema.avro.cdm18.UUID value) {
      validate(fields()[0], value);
      this.unit = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'unit' field has been set.
      * @return True if the 'unit' field has been set, false otherwise.
      */
    public boolean hasUnit() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'unit' field.
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm18.UnitDependency.Builder clearUnit() {
      unit = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'dependentUnit' field.
      * @return The value.
      */
    public com.bbn.tc.schema.avro.cdm18.UUID getDependentUnit() {
      return dependentUnit;
    }

    /**
      * Sets the value of the 'dependentUnit' field.
      * @param value The value of 'dependentUnit'.
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm18.UnitDependency.Builder setDependentUnit(com.bbn.tc.schema.avro.cdm18.UUID value) {
      validate(fields()[1], value);
      this.dependentUnit = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'dependentUnit' field has been set.
      * @return True if the 'dependentUnit' field has been set, false otherwise.
      */
    public boolean hasDependentUnit() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'dependentUnit' field.
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm18.UnitDependency.Builder clearDependentUnit() {
      dependentUnit = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public UnitDependency build() {
      try {
        UnitDependency record = new UnitDependency();
        record.unit = fieldSetFlags()[0] ? this.unit : (com.bbn.tc.schema.avro.cdm18.UUID) defaultValue(fields()[0]);
        record.dependentUnit = fieldSetFlags()[1] ? this.dependentUnit : (com.bbn.tc.schema.avro.cdm18.UUID) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
