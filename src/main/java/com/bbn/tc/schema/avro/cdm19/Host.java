/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.bbn.tc.schema.avro.cdm19;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** * Hosts represent a host/machine/node in a network. */
@org.apache.avro.specific.AvroGenerated
public class Host extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7260594700989052027L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Host\",\"namespace\":\"com.bbn.tc.schema.avro.cdm19\",\"doc\":\"* Hosts represent a host/machine/node in a network.\",\"fields\":[{\"name\":\"uuid\",\"type\":{\"type\":\"fixed\",\"name\":\"UUID\",\"doc\":\"* A host MUST NOT reuse UUIDs at all within their system, even\\n     * across restarts, and definitely not for 2 distinct objects\",\"size\":16},\"doc\":\"universally unique identifier for the host\"},{\"name\":\"hostName\",\"type\":\"string\",\"doc\":\"hostname or machine name\"},{\"name\":\"hostIdentifiers\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"HostIdentifier\",\"doc\":\"Host identifier, such as serial number, IMEI number\",\"fields\":[{\"name\":\"idType\",\"type\":\"string\"},{\"name\":\"idValue\",\"type\":\"string\"}]}}],\"doc\":\"list of identifiers, such as serial number, IMEI number\",\"default\":null},{\"name\":\"osDetails\",\"type\":[\"null\",\"string\"],\"doc\":\"OS level details revealed by tools such as uname -a\",\"default\":null},{\"name\":\"hostType\",\"type\":{\"type\":\"enum\",\"name\":\"HostType\",\"doc\":\"* HostType enumerates the host roles or device types\",\"symbols\":[\"HOST_MOBILE\",\"HOST_SERVER\",\"HOST_DESKTOP\"]},\"doc\":\"host's role or device type, such as mobile, server, desktop\"},{\"name\":\"interfaces\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Interface\",\"doc\":\"Interface name and addresses\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"macAddress\",\"type\":\"string\"},{\"name\":\"ipAddresses\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}],\"default\":null}]}}],\"doc\":\"names and addresses of network interfaces\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** universally unique identifier for the host */
  @Deprecated public com.bbn.tc.schema.avro.cdm19.UUID uuid;
  /** hostname or machine name */
  @Deprecated public java.lang.CharSequence hostName;
  /** list of identifiers, such as serial number, IMEI number */
  @Deprecated public java.util.List<com.bbn.tc.schema.avro.cdm19.HostIdentifier> hostIdentifiers;
  /** OS level details revealed by tools such as uname -a */
  @Deprecated public java.lang.CharSequence osDetails;
  /** host's role or device type, such as mobile, server, desktop */
  @Deprecated public com.bbn.tc.schema.avro.cdm19.HostType hostType;
  /** names and addresses of network interfaces */
  @Deprecated public java.util.List<com.bbn.tc.schema.avro.cdm19.Interface> interfaces;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Host() {}

  /**
   * All-args constructor.
   * @param uuid universally unique identifier for the host
   * @param hostName hostname or machine name
   * @param hostIdentifiers list of identifiers, such as serial number, IMEI number
   * @param osDetails OS level details revealed by tools such as uname -a
   * @param hostType host's role or device type, such as mobile, server, desktop
   * @param interfaces names and addresses of network interfaces
   */
  public Host(com.bbn.tc.schema.avro.cdm19.UUID uuid, java.lang.CharSequence hostName, java.util.List<com.bbn.tc.schema.avro.cdm19.HostIdentifier> hostIdentifiers, java.lang.CharSequence osDetails, com.bbn.tc.schema.avro.cdm19.HostType hostType, java.util.List<com.bbn.tc.schema.avro.cdm19.Interface> interfaces) {
    this.uuid = uuid;
    this.hostName = hostName;
    this.hostIdentifiers = hostIdentifiers;
    this.osDetails = osDetails;
    this.hostType = hostType;
    this.interfaces = interfaces;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return uuid;
    case 1: return hostName;
    case 2: return hostIdentifiers;
    case 3: return osDetails;
    case 4: return hostType;
    case 5: return interfaces;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: uuid = (com.bbn.tc.schema.avro.cdm19.UUID)value$; break;
    case 1: hostName = (java.lang.CharSequence)value$; break;
    case 2: hostIdentifiers = (java.util.List<com.bbn.tc.schema.avro.cdm19.HostIdentifier>)value$; break;
    case 3: osDetails = (java.lang.CharSequence)value$; break;
    case 4: hostType = (com.bbn.tc.schema.avro.cdm19.HostType)value$; break;
    case 5: interfaces = (java.util.List<com.bbn.tc.schema.avro.cdm19.Interface>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'uuid' field.
   * @return universally unique identifier for the host
   */
  public com.bbn.tc.schema.avro.cdm19.UUID getUuid() {
    return uuid;
  }

  /**
   * Sets the value of the 'uuid' field.
   * universally unique identifier for the host
   * @param value the value to set.
   */
  public void setUuid(com.bbn.tc.schema.avro.cdm19.UUID value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'hostName' field.
   * @return hostname or machine name
   */
  public java.lang.CharSequence getHostName() {
    return hostName;
  }

  /**
   * Sets the value of the 'hostName' field.
   * hostname or machine name
   * @param value the value to set.
   */
  public void setHostName(java.lang.CharSequence value) {
    this.hostName = value;
  }

  /**
   * Gets the value of the 'hostIdentifiers' field.
   * @return list of identifiers, such as serial number, IMEI number
   */
  public java.util.List<com.bbn.tc.schema.avro.cdm19.HostIdentifier> getHostIdentifiers() {
    return hostIdentifiers;
  }

  /**
   * Sets the value of the 'hostIdentifiers' field.
   * list of identifiers, such as serial number, IMEI number
   * @param value the value to set.
   */
  public void setHostIdentifiers(java.util.List<com.bbn.tc.schema.avro.cdm19.HostIdentifier> value) {
    this.hostIdentifiers = value;
  }

  /**
   * Gets the value of the 'osDetails' field.
   * @return OS level details revealed by tools such as uname -a
   */
  public java.lang.CharSequence getOsDetails() {
    return osDetails;
  }

  /**
   * Sets the value of the 'osDetails' field.
   * OS level details revealed by tools such as uname -a
   * @param value the value to set.
   */
  public void setOsDetails(java.lang.CharSequence value) {
    this.osDetails = value;
  }

  /**
   * Gets the value of the 'hostType' field.
   * @return host's role or device type, such as mobile, server, desktop
   */
  public com.bbn.tc.schema.avro.cdm19.HostType getHostType() {
    return hostType;
  }

  /**
   * Sets the value of the 'hostType' field.
   * host's role or device type, such as mobile, server, desktop
   * @param value the value to set.
   */
  public void setHostType(com.bbn.tc.schema.avro.cdm19.HostType value) {
    this.hostType = value;
  }

  /**
   * Gets the value of the 'interfaces' field.
   * @return names and addresses of network interfaces
   */
  public java.util.List<com.bbn.tc.schema.avro.cdm19.Interface> getInterfaces() {
    return interfaces;
  }

  /**
   * Sets the value of the 'interfaces' field.
   * names and addresses of network interfaces
   * @param value the value to set.
   */
  public void setInterfaces(java.util.List<com.bbn.tc.schema.avro.cdm19.Interface> value) {
    this.interfaces = value;
  }

  /**
   * Creates a new Host RecordBuilder.
   * @return A new Host RecordBuilder
   */
  public static com.bbn.tc.schema.avro.cdm19.Host.Builder newBuilder() {
    return new com.bbn.tc.schema.avro.cdm19.Host.Builder();
  }

  /**
   * Creates a new Host RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Host RecordBuilder
   */
  public static com.bbn.tc.schema.avro.cdm19.Host.Builder newBuilder(com.bbn.tc.schema.avro.cdm19.Host.Builder other) {
    return new com.bbn.tc.schema.avro.cdm19.Host.Builder(other);
  }

  /**
   * Creates a new Host RecordBuilder by copying an existing Host instance.
   * @param other The existing instance to copy.
   * @return A new Host RecordBuilder
   */
  public static com.bbn.tc.schema.avro.cdm19.Host.Builder newBuilder(com.bbn.tc.schema.avro.cdm19.Host other) {
    return new com.bbn.tc.schema.avro.cdm19.Host.Builder(other);
  }

  /**
   * RecordBuilder for Host instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Host>
    implements org.apache.avro.data.RecordBuilder<Host> {

    /** universally unique identifier for the host */
    private com.bbn.tc.schema.avro.cdm19.UUID uuid;
    /** hostname or machine name */
    private java.lang.CharSequence hostName;
    /** list of identifiers, such as serial number, IMEI number */
    private java.util.List<com.bbn.tc.schema.avro.cdm19.HostIdentifier> hostIdentifiers;
    /** OS level details revealed by tools such as uname -a */
    private java.lang.CharSequence osDetails;
    /** host's role or device type, such as mobile, server, desktop */
    private com.bbn.tc.schema.avro.cdm19.HostType hostType;
    /** names and addresses of network interfaces */
    private java.util.List<com.bbn.tc.schema.avro.cdm19.Interface> interfaces;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.bbn.tc.schema.avro.cdm19.Host.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.hostName)) {
        this.hostName = data().deepCopy(fields()[1].schema(), other.hostName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.hostIdentifiers)) {
        this.hostIdentifiers = data().deepCopy(fields()[2].schema(), other.hostIdentifiers);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.osDetails)) {
        this.osDetails = data().deepCopy(fields()[3].schema(), other.osDetails);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.hostType)) {
        this.hostType = data().deepCopy(fields()[4].schema(), other.hostType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.interfaces)) {
        this.interfaces = data().deepCopy(fields()[5].schema(), other.interfaces);
        fieldSetFlags()[5] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Host instance
     * @param other The existing instance to copy.
     */
    private Builder(com.bbn.tc.schema.avro.cdm19.Host other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.hostName)) {
        this.hostName = data().deepCopy(fields()[1].schema(), other.hostName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.hostIdentifiers)) {
        this.hostIdentifiers = data().deepCopy(fields()[2].schema(), other.hostIdentifiers);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.osDetails)) {
        this.osDetails = data().deepCopy(fields()[3].schema(), other.osDetails);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.hostType)) {
        this.hostType = data().deepCopy(fields()[4].schema(), other.hostType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.interfaces)) {
        this.interfaces = data().deepCopy(fields()[5].schema(), other.interfaces);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'uuid' field.
      * universally unique identifier for the host
      * @return The value.
      */
    public com.bbn.tc.schema.avro.cdm19.UUID getUuid() {
      return uuid;
    }

    /**
      * Sets the value of the 'uuid' field.
      * universally unique identifier for the host
      * @param value The value of 'uuid'.
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm19.Host.Builder setUuid(com.bbn.tc.schema.avro.cdm19.UUID value) {
      validate(fields()[0], value);
      this.uuid = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'uuid' field has been set.
      * universally unique identifier for the host
      * @return True if the 'uuid' field has been set, false otherwise.
      */
    public boolean hasUuid() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'uuid' field.
      * universally unique identifier for the host
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm19.Host.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'hostName' field.
      * hostname or machine name
      * @return The value.
      */
    public java.lang.CharSequence getHostName() {
      return hostName;
    }

    /**
      * Sets the value of the 'hostName' field.
      * hostname or machine name
      * @param value The value of 'hostName'.
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm19.Host.Builder setHostName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.hostName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'hostName' field has been set.
      * hostname or machine name
      * @return True if the 'hostName' field has been set, false otherwise.
      */
    public boolean hasHostName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'hostName' field.
      * hostname or machine name
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm19.Host.Builder clearHostName() {
      hostName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'hostIdentifiers' field.
      * list of identifiers, such as serial number, IMEI number
      * @return The value.
      */
    public java.util.List<com.bbn.tc.schema.avro.cdm19.HostIdentifier> getHostIdentifiers() {
      return hostIdentifiers;
    }

    /**
      * Sets the value of the 'hostIdentifiers' field.
      * list of identifiers, such as serial number, IMEI number
      * @param value The value of 'hostIdentifiers'.
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm19.Host.Builder setHostIdentifiers(java.util.List<com.bbn.tc.schema.avro.cdm19.HostIdentifier> value) {
      validate(fields()[2], value);
      this.hostIdentifiers = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'hostIdentifiers' field has been set.
      * list of identifiers, such as serial number, IMEI number
      * @return True if the 'hostIdentifiers' field has been set, false otherwise.
      */
    public boolean hasHostIdentifiers() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'hostIdentifiers' field.
      * list of identifiers, such as serial number, IMEI number
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm19.Host.Builder clearHostIdentifiers() {
      hostIdentifiers = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'osDetails' field.
      * OS level details revealed by tools such as uname -a
      * @return The value.
      */
    public java.lang.CharSequence getOsDetails() {
      return osDetails;
    }

    /**
      * Sets the value of the 'osDetails' field.
      * OS level details revealed by tools such as uname -a
      * @param value The value of 'osDetails'.
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm19.Host.Builder setOsDetails(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.osDetails = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'osDetails' field has been set.
      * OS level details revealed by tools such as uname -a
      * @return True if the 'osDetails' field has been set, false otherwise.
      */
    public boolean hasOsDetails() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'osDetails' field.
      * OS level details revealed by tools such as uname -a
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm19.Host.Builder clearOsDetails() {
      osDetails = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'hostType' field.
      * host's role or device type, such as mobile, server, desktop
      * @return The value.
      */
    public com.bbn.tc.schema.avro.cdm19.HostType getHostType() {
      return hostType;
    }

    /**
      * Sets the value of the 'hostType' field.
      * host's role or device type, such as mobile, server, desktop
      * @param value The value of 'hostType'.
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm19.Host.Builder setHostType(com.bbn.tc.schema.avro.cdm19.HostType value) {
      validate(fields()[4], value);
      this.hostType = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'hostType' field has been set.
      * host's role or device type, such as mobile, server, desktop
      * @return True if the 'hostType' field has been set, false otherwise.
      */
    public boolean hasHostType() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'hostType' field.
      * host's role or device type, such as mobile, server, desktop
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm19.Host.Builder clearHostType() {
      hostType = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'interfaces' field.
      * names and addresses of network interfaces
      * @return The value.
      */
    public java.util.List<com.bbn.tc.schema.avro.cdm19.Interface> getInterfaces() {
      return interfaces;
    }

    /**
      * Sets the value of the 'interfaces' field.
      * names and addresses of network interfaces
      * @param value The value of 'interfaces'.
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm19.Host.Builder setInterfaces(java.util.List<com.bbn.tc.schema.avro.cdm19.Interface> value) {
      validate(fields()[5], value);
      this.interfaces = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'interfaces' field has been set.
      * names and addresses of network interfaces
      * @return True if the 'interfaces' field has been set, false otherwise.
      */
    public boolean hasInterfaces() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'interfaces' field.
      * names and addresses of network interfaces
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm19.Host.Builder clearInterfaces() {
      interfaces = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public Host build() {
      try {
        Host record = new Host();
        record.uuid = fieldSetFlags()[0] ? this.uuid : (com.bbn.tc.schema.avro.cdm19.UUID) defaultValue(fields()[0]);
        record.hostName = fieldSetFlags()[1] ? this.hostName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.hostIdentifiers = fieldSetFlags()[2] ? this.hostIdentifiers : (java.util.List<com.bbn.tc.schema.avro.cdm19.HostIdentifier>) defaultValue(fields()[2]);
        record.osDetails = fieldSetFlags()[3] ? this.osDetails : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.hostType = fieldSetFlags()[4] ? this.hostType : (com.bbn.tc.schema.avro.cdm19.HostType) defaultValue(fields()[4]);
        record.interfaces = fieldSetFlags()[5] ? this.interfaces : (java.util.List<com.bbn.tc.schema.avro.cdm19.Interface>) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
