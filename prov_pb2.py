# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: prov.proto

from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)




DESCRIPTOR = _descriptor.FileDescriptor(
  name='prov.proto',
  package='',
  serialized_pb='\n\nprov.proto\"[\n\rSensorQueries\x12\x13\n\x0bsensorLevel\x18\x01 \x02(\x05\x12\x0e\n\x06kernel\x18\x02 \x02(\x08\x12\x10\n\x08userApps\x18\x03 \x02(\x08\x12\x13\n\x0bsystemTools\x18\x04 \x02(\x08\"C\n\x0eProvenanceInfo\x12\x15\n\x02op\x18\x01 \x02(\x0e\x32\t.ProvType\x12\x1a\n\nproperties\x18\x02 \x03(\x0b\x32\x06.Tuple\"#\n\x05Tuple\x12\x0b\n\x03key\x18\x01 \x02(\t\x12\r\n\x05value\x18\x02 \x02(\t*-\n\x08ProvType\x12\n\n\x06\x45ntity\x10\x01\x12\n\n\x06\x41\x63tion\x10\x02\x12\t\n\x05\x41\x63tor\x10\x03')

_PROVTYPE = _descriptor.EnumDescriptor(
  name='ProvType',
  full_name='ProvType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='Entity', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Action', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Actor', index=2, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=213,
  serialized_end=258,
)

ProvType = enum_type_wrapper.EnumTypeWrapper(_PROVTYPE)
Entity = 1
Action = 2
Actor = 3



_SENSORQUERIES = _descriptor.Descriptor(
  name='SensorQueries',
  full_name='SensorQueries',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sensorLevel', full_name='SensorQueries.sensorLevel', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='kernel', full_name='SensorQueries.kernel', index=1,
      number=2, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='userApps', full_name='SensorQueries.userApps', index=2,
      number=3, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='systemTools', full_name='SensorQueries.systemTools', index=3,
      number=4, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=14,
  serialized_end=105,
)


_PROVENANCEINFO = _descriptor.Descriptor(
  name='ProvenanceInfo',
  full_name='ProvenanceInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='op', full_name='ProvenanceInfo.op', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='properties', full_name='ProvenanceInfo.properties', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=107,
  serialized_end=174,
)


_TUPLE = _descriptor.Descriptor(
  name='Tuple',
  full_name='Tuple',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='Tuple.key', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='Tuple.value', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=176,
  serialized_end=211,
)

_PROVENANCEINFO.fields_by_name['op'].enum_type = _PROVTYPE
_PROVENANCEINFO.fields_by_name['properties'].message_type = _TUPLE
DESCRIPTOR.message_types_by_name['SensorQueries'] = _SENSORQUERIES
DESCRIPTOR.message_types_by_name['ProvenanceInfo'] = _PROVENANCEINFO
DESCRIPTOR.message_types_by_name['Tuple'] = _TUPLE

class SensorQueries(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _SENSORQUERIES

  # @@protoc_insertion_point(class_scope:SensorQueries)

class ProvenanceInfo(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _PROVENANCEINFO

  # @@protoc_insertion_point(class_scope:ProvenanceInfo)

class Tuple(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _TUPLE

  # @@protoc_insertion_point(class_scope:Tuple)


# @@protoc_insertion_point(module_scope)
